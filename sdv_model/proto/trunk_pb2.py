# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: trunk.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0btrunk.proto\x12\x19sdv.edge.comfort.trunk.v1\"\x86\x01\n\x13SetLockStateRequest\x12:\n\x08instance\x18\x01 \x01(\x0e\x32(.sdv.edge.comfort.trunk.v1.TrunkInstance\x12\x33\n\x05state\x18\x02 \x01(\x0e\x32$.sdv.edge.comfort.trunk.v1.LockState\"\x13\n\x11SetLockStateReply\"I\n\x0bOpenRequest\x12:\n\x08instance\x18\x01 \x01(\x0e\x32(.sdv.edge.comfort.trunk.v1.TrunkInstance\"\x0b\n\tOpenReply\"J\n\x0c\x43loseRequest\x12:\n\x08instance\x18\x01 \x01(\x0e\x32(.sdv.edge.comfort.trunk.v1.TrunkInstance\"\x0c\n\nCloseReply*-\n\rTrunkInstance\x12\x07\n\x03\x41LL\x10\x00\x12\t\n\x05\x46RONT\x10\x01\x12\x08\n\x04REAR\x10\x02*%\n\tLockState\x12\n\n\x06LOCKED\x10\x00\x12\x0c\n\x08UNLOCKED\x10\x01\x32\xa4\x02\n\x05Trunk\x12l\n\x0cSetLockState\x12..sdv.edge.comfort.trunk.v1.SetLockStateRequest\x1a,.sdv.edge.comfort.trunk.v1.SetLockStateReply\x12T\n\x04Open\x12&.sdv.edge.comfort.trunk.v1.OpenRequest\x1a$.sdv.edge.comfort.trunk.v1.OpenReply\x12W\n\x05\x43lose\x12\'.sdv.edge.comfort.trunk.v1.CloseRequest\x1a%.sdv.edge.comfort.trunk.v1.CloseReplyb\x06proto3')

_TRUNKINSTANCE = DESCRIPTOR.enum_types_by_name['TrunkInstance']
TrunkInstance = enum_type_wrapper.EnumTypeWrapper(_TRUNKINSTANCE)
_LOCKSTATE = DESCRIPTOR.enum_types_by_name['LockState']
LockState = enum_type_wrapper.EnumTypeWrapper(_LOCKSTATE)
ALL = 0
FRONT = 1
REAR = 2
LOCKED = 0
UNLOCKED = 1


_SETLOCKSTATEREQUEST = DESCRIPTOR.message_types_by_name['SetLockStateRequest']
_SETLOCKSTATEREPLY = DESCRIPTOR.message_types_by_name['SetLockStateReply']
_OPENREQUEST = DESCRIPTOR.message_types_by_name['OpenRequest']
_OPENREPLY = DESCRIPTOR.message_types_by_name['OpenReply']
_CLOSEREQUEST = DESCRIPTOR.message_types_by_name['CloseRequest']
_CLOSEREPLY = DESCRIPTOR.message_types_by_name['CloseReply']
SetLockStateRequest = _reflection.GeneratedProtocolMessageType('SetLockStateRequest', (_message.Message,), {
  'DESCRIPTOR': _SETLOCKSTATEREQUEST,
  '__module__': 'trunk_pb2'
  # @@protoc_insertion_point(class_scope:sdv.edge.comfort.trunk.v1.SetLockStateRequest)
}
)
_sym_db.RegisterMessage(SetLockStateRequest)

SetLockStateReply = _reflection.GeneratedProtocolMessageType('SetLockStateReply', (_message.Message,), {
  'DESCRIPTOR': _SETLOCKSTATEREPLY,
  '__module__': 'trunk_pb2'
  # @@protoc_insertion_point(class_scope:sdv.edge.comfort.trunk.v1.SetLockStateReply)
})
_sym_db.RegisterMessage(SetLockStateReply)

OpenRequest = _reflection.GeneratedProtocolMessageType('OpenRequest', (_message.Message,), {
  'DESCRIPTOR': _OPENREQUEST,
  '__module__': 'trunk_pb2'
  # @@protoc_insertion_point(class_scope:sdv.edge.comfort.trunk.v1.OpenRequest)
})
_sym_db.RegisterMessage(OpenRequest)

OpenReply = _reflection.GeneratedProtocolMessageType('OpenReply', (_message.Message,), {
  'DESCRIPTOR': _OPENREPLY,
  '__module__': 'trunk_pb2'
  # @@protoc_insertion_point(class_scope:sdv.edge.comfort.trunk.v1.OpenReply)
})
_sym_db.RegisterMessage(OpenReply)

CloseRequest = _reflection.GeneratedProtocolMessageType('CloseRequest', (_message.Message,), {
  'DESCRIPTOR': _CLOSEREQUEST,
  '__module__': 'trunk_pb2'
  # @@protoc_insertion_point(class_scope:sdv.edge.comfort.trunk.v1.CloseRequest)
})
_sym_db.RegisterMessage(CloseRequest)

CloseReply = _reflection.GeneratedProtocolMessageType('CloseReply', (_message.Message,), {
  'DESCRIPTOR': _CLOSEREPLY,
  '__module__': 'trunk_pb2'
  # @@protoc_insertion_point(class_scope:sdv.edge.comfort.trunk.v1.CloseReply)
})
_sym_db.RegisterMessage(CloseReply)

_TRUNK = DESCRIPTOR.services_by_name['Trunk']
if _descriptor._USE_C_DESCRIPTORS is False:
    DESCRIPTOR._options = None
    _TRUNKINSTANCE._serialized_start = 378
    _TRUNKINSTANCE._serialized_end = 423
    _LOCKSTATE._serialized_start = 425
    _LOCKSTATE._serialized_end = 462
    _SETLOCKSTATEREQUEST._serialized_start = 43
    _SETLOCKSTATEREQUEST._serialized_end = 177
    _SETLOCKSTATEREPLY._serialized_start = 179
    _SETLOCKSTATEREPLY._serialized_end = 198
    _OPENREQUEST._serialized_start = 200
    _OPENREQUEST._serialized_end = 273
    _OPENREPLY._serialized_start = 275
    _OPENREPLY._serialized_end = 286
    _CLOSEREQUEST._serialized_start = 288
    _CLOSEREQUEST._serialized_end = 362
    _CLOSEREPLY._serialized_start = 364
    _CLOSEREPLY._serialized_end = 376
    _TRUNK._serialized_start = 465
    _TRUNK._serialized_end = 757
# @@protoc_insertion_point(module_scope)
